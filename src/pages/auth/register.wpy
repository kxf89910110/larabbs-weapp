<style lang="less">
.register-wrap {
  margin-top: 50px;
}

.error-message {
  color: #E64340;
}
</style>
<template>
  <view class="page">
    <view class="page__bd register-wrap">
      <form bindsubmit="submit">
        <view class="weui-toptips weui-toptics_warn" wx:if="{{ errorMessage }}">{{ errorMessage }}</view>

        <view class="weui-cells__title">GameBBS Register your phone</view>

        <!-- 手机号 -->
        <view class="weui-cells__title {{ errors.phone ? 'weui-cell_warn' : ''}}">Phone number</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_input {{ errors.phone ? 'weui-cell_warn' : ''}}">
            <view class="weui-cell__bd">
              <input disabled="{{ phoneDisabled }}" class="weui-input" type="number" placeholder="Please enter phone number" @input="bindPhoneInput" />
            </view>
            <view class="weui-cell__ft">
              <icon wx:if="{{ errors.phone }}" type="warn" size="23" color="#E64340"></icon>
              <view class="weui-vcode-btn" @tap="tapCaptchaCode">Get verification code</view>
            </view>
          </view>
        </view>
        <view wx:if="{{ errors.phone }}" class="weui-cells__tips error-message">{{ errors.phone[0] }}</view>

        <!-- 短信验证码 -->
        <view class="weui-cells__title {{ errors.verification_code ? 'weui-cell_warn' : ''}}">SMS Verification code</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_input {{ errors.verification_code ? 'weui-cell_warn' : ''}}">
            <view class="weui-cell__bd">
              <input class="weui-input" placeholder="Please enter SMS verification code" name="verification_code" />
            </view>
            <view class="weui-cell__ft">
              <icon wx:if="{{ errors.verification_code }}" type = "warn" size="23" color="#E64340"></icon>
            </view>
          </view>
        </view>
        <view wx:if="{{ errors.verification_code }}" class="weui-cells__tips error-message">{{ errors.verification_code[0] }}</view>

        <!-- 姓名 -->
        <view class="weui-cells__title {{ errors.name ? 'weui-cell_warn' : ''}}">Name</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_input {{ errors.name ? 'weui-cell_warn' : ''}}">
            <view class="weui-cell__bd">
              <input class="weui-input" placeholder="Please enter your name" name="name" />
            </view>
            <view class="weui-cell__ft">
              <icon wx:if="{{ errors.name }}" type="warn" size="23" color="#E64340"></icon>
            </view>
          </view>
        </view>
        <view wx:if="{{ errors.name }}" class="weui-cells__tips error-message">{{ errors.name[0] }}</view>

        <!-- 密码 -->
        <view class="weui-cells__title {{ errors.password ? 'weui-cell_warn' : ''}}">Password</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_input {{ errors.password ? 'weui-cell_warn' : ''}}">
            <view class="weui-cell__bd">
              <input class="weui-input" placeholder="Please enter your password" name="password" type="password" />
            </view>
            <view class="weui-cell__ft">
              <icon wx:if="{{ errors.password }}" type="warn" size="23" color="#E64340"></icon>
            </view>
          </view>
        </view>
        <view wx:if="{{ errors.password }}" class="weui-cells__tips error-message">{{ errors.password[0] }}</view>

        <view class="weui-btn-area">
          <button class="weui-btn" type="primary" formType="submit">Register</button>
        </view>
      </form>

      <!-- 验证码输入模态框 -->
      <modal class="modal" hidden="{{ captchaModalHidden }}" no-cancel bindconfirm="sendVerificationCode">
        <view wx:if="{{ errors.captchaValue }}" class="weui-cells__tips error-message">{{ errors.captchaValue[0] }}</view>
        <view class="weui-cell weui-cell_input weui-cell_vcode">
          <view class="weui-cell__bd">
            <input class="weui-input" placeholder="Picture verification code" @input="bindCaptchaCodeInput"/>
          </view>
          <view class="weui-cell__ft">
            <image class="weui-vcode-img" @tap="tapCaptchaCode" src="{{ captcha.imageContent }}" style="width: 100px"></image>
          </view>
        </view>
      </modal>

    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class Login extends wepy.page {
    config = {
      navigationBarTitleText: 'Register'
    }
    data = {
      // 手机号
      phone: null,
      // 手机号 input 是否 disabled
      phoneDisabled: false,
      // 图片验证码 modal 是否显示
      captchaModalHidden: true,
      // 用户输入的验证码
      captchaValue: null,
      // 图片验证码 key 及过期时间
      captcha: {},
      // 表单错误
      errors: {},
      // 短信验证码 key 及过期时间
      verificationCode: {}
    }
    // 重置注册流程，初始化 data 数据
    resetRegister() {
      this.captchaModalHidden = true
      this.phoneDisabled = false
      this.captcha = {}
      this.verificationCode = {}
      this.errors = {}
    }
    // 表单提交
    async submit (e) {
      this.errors = {}
      // 检查验证码是否已发送
      if (!this.verificationCode.key) {
        wepy.showToast({
          title: 'Please send a verification code',
          icon: 'none',
          duration: 2000
        })
        return false
      }
      // 检查验证码是否过期
      if (new Date().getTime() > this.verificationCode.expiredAt) {
        wepy.showToast({
          title: 'Verification code has expired',
          icon: 'none',
          duration: 2000
        })
        this.resetRegister()
        return false
      }

      try {
        let formData = e.detail.value
        formData.verification_key = this.verificationCode.key

        let loginData = await wepy.login()
        // 参数中增加code，用于获取 openid 绑定当前用户
        formData.code = loginData.code

        let registerResponse = await api.request({
          url: 'weapp/users',
          method: 'POST',
          data: formData
        })

        // 验证码错误
        if (registerResponse.statusCode === 401) {
          this.errors.verification_code = ['Verification code error']
          this.$apply()
        }

        // 表单错误
        if (registerResponse.statusCode === 422) {
          this.errors = registerResponse.data.errors
          this.$apply()
        }

        // 注册成功，记录token
        if (registerResponse.statusCode === 201) {
          wepy.setStorageSync('access_token', registerResponse.data.meta.access_token)
          wepy.setStorageSync('access_token_expired_at', new Date().getTime() + registerResponse.data.meta.expires_in * 1000)
          // 设置用户信息
          wepy.setStorageSync('user', registerResponse.data)

          wepy.showToast({
            title: 'Register success',
            icon: 'success'
          })

          // 跳转到我的页面
          setTimeout(function() {
            wepy.switchTab({
              url: '/pages/users/me'
            })
          }, 2000)
        }
      } catch (err) {
        console.log(err)
        wepy.showModal({
          title: 'Prompt',
          content: 'Server error, please contact the administrator'
        })
      }
    }
    // 获取图片验证码
    async getCaptchaCode() {
      this.errors.phone = null

      // 判断手机号是否正确
      if (!(/^1[34578]\d{9}$/.test(this.phone))) {
        this.errors.phone = ['Please enter a valid phone number']
        this.$apply()
        return false
      }

      try {
        // 调用发送验证码接口，参数为手机号
        let captchaResponse = await api.request({
          url: 'captchas',
          method: 'POST',
          data: {
            phone: this.phone
          }
        })

        // 表单错误
        if (captchaResponse.statusCode === 422) {
          this.errors = captchaResponse.data.errors
          this.$apply()
        }

        // 记录 key 和过期时间，打开 modal
        if (captchaResponse.statusCode === 201) {
          this.captcha = {
            key: captchaResponse.data.captcha_key,
            imageContent: captchaResponse.data.captcha_image_content,
            expiredAt: Date.parse(captchaResponse.data.expired_at)
          }

          // 打开modal
          this.captchaModalHidden = false
          this.$apply()
        }
      } catch (err) {
        console.log(err)
        wepy.showModal({
          title: 'Prompt',
          content: 'Server error, please contact the administrator'
        })
      }
    }
    methods = {
      // 绑定手机输入
      bindPhoneInput (e) {
        this.phone = e.detail.value
      },
      // 绑定验证码输入
      bindCaptchaCodeInput (e) {
        this.captchaValue = e.detail.value
      },
      // 响应获取图片验证码按钮点击事件
      async tapCaptchaCode() {
        this.getCaptchaCode()
      },
      // 发送短信验证码
      async sendVerificationCode() {
        if (!this.captchaValue) {
          this.errors.captchaValue = ['Please enter a photo verification code']
          return false
        }

        // 检查验证码是否过期，充值流程
        if (new Date().getTime() > new Date(this.captcha.expiredAt).getTime()) {
          wepy.showToast({
            title: 'Verification code has expired',
            icon: 'none',
            duration: 2000
          })
          this.resetRegister()
          return false
        }

        try {
          let codeResponse = await api.request({
            url: 'verificationCodes',
            method: 'POST',
            data: {
              captcha_key: this.captcha.key,
              captcha_code: this.captchaValue
            }
          })

          // 验证码错误提示
          if (codeResponse.statusCode === 401) {
            this.errors.captchaValue = ['Image verification code error']
            this.$apply()
            await this.getCaptchaCode()
            return false
          }

          // 记录 key 和 过期时间
          if (codeResponse.statusCode === 201) {
            this.verificationCode = {
              key: codeResponse.data.key,
              expiredAt: Date.parse(codeResponse.data.expired_at)
            }

            // 关闭modal
            this.captchaModalHidden = true
            // 手机输入框 disabled
            this.phoneDisabled = true
            // 清空报错信息
            this.errors = {}
            this.$apply()
          }
        } catch (err) {
          console.log(err)
          wepy.showModal({
            title: 'Prompt',
            content: 'Server error, please contact the administrator'
          })
        }
      }
    }
  }
</script>
